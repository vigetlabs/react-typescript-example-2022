name: GitHub CI

on:
  push:
    branches: [ main ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  lint-format:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      HUSKY: 0
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - run: bin/lint

  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      HUSKY: 0
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - run: bin/ci

  test-coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      HUSKY: 0
      NODE_ENV: test
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - run: bin/cov

      - uses: actions/upload-artifact@v3
        with:
          name: coverage-summary
          path: coverage/*

      # @TODO(shawk): replace this with something better
      - uses: danhunsaker/clover-reporter-action@v0.2.17-clover
        if: ${{ github.event_name == 'pull_request' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          clover-file: coverage/clover.xml

  test-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      HUSKY: 0
      NODE_ENV: test
    container:
      image: mcr.microsoft.com/playwright:v1.27.0-focal
      options: --user 1001 # https://github.com/cypress-io/github-action/issues/446
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-report
          path: e2e/results/
          retention-days: 30

  lighthouse:
    runs-on: ubuntu-latest
    environment: CI
    steps:
      - name: Create artifacts directory
        run: mkdir -p ${{ github.workspace }}/tmp/artifacts

      - name: Wait for Netlify Preview
        uses: kamranayub/wait-for-netlify-action@v2.1.0
        id: wait-for-netflify-preview
        with:
          site_name: "react-ts-reference-2022"
        env:
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}

      - name: Prime netlify site cache
        run: curl -so /dev/null -w "%{time_connect} - %{time_starttransfer} - %{time_total}  " ${{ steps.wait-for-netflify-preview.outputs.url }}

      - name: Lighthouse
        uses: foo-software/lighthouse-check-action@master
        with:
          device: all
          outputDirectory: ${{ github.workspace }}/tmp/artifacts
          slackWebhookUrl: ${{ secrets.LIGHTHOUSE_SLACK_WEBHOOK_URL }}
          prCommentEnabled: true
          prCommentSaveOld: false
          gitHubAccessToken: ${{ secrets.GITHUB_TOKEN }}
          gitAuthor: ${{ github.actor }}
          branch: ${{ github.ref }}
          sha: ${{ github.sha }}
          urls: '${{ steps.wait-for-netflify-preview.outputs.url }}'

      - name: Upload lighthouseartifacts
        uses: actions/upload-artifact@master
        with:
          name: Lighthouse reports
          path: ${{ github.workspace }}/tmp/artifacts
